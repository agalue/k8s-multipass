#cloud-config
package_upgrade: true

write_files:

- path: /etc/systemd/resolved.conf
  append: true
  content: |
    MulticastDNS=yes

- path: /etc/systemd/system/mdns@.service
  content: |
    [Service]
    Type=oneshot
    ExecStart=/usr/bin/resolvectl mdns %i yes
    After=sys-subsystem-net-devices-%i.device
    [Install]
    WantedBy=sys-subsystem-net-devices-%i.device

- path: /etc/modules-load.d/containerd.conf
  content: |
    overlay
    br_netfilter

- path: /etc/sysctl.d/no-ipv6.conf
  content: |
    net.ipv6.conf.all.disable_ipv6     = 1
    net.ipv6.conf.default.disable_ipv6 = 1

- path: /etc/sysctl.d/k8s.conf
  content: |
    net.bridge.bridge-nf-call-iptables  = 1
    net.bridge.bridge-nf-call-ip6tables = 1
    net.ipv4.ip_forward                 = 1

# https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/install-kubeadm/#dpkg-k8s-package-repo
- path: /usr/local/bin/kubernetes-install.sh
  permissions: '0755'
  content: |
    #!/bin/bash
    set -e
    DEBIAN_FRONTEND=noninteractive
    VERSION=v1.29
    curl -fsSL https://pkgs.k8s.io/core:/stable:/${VERSION}/deb/Release.key | gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
    echo "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/${VERSION}/deb/ /" | tee /etc/apt/sources.list.d/kubernetes.list
    apt-get update
    apt-get install -y kubelet kubeadm kubectl
    apt-mark hold kubelet kubeadm kubectl

- path: /usr/local/bin/kubernetes-setup-kubectl.sh
  permissions: '0755'
  content: |
    #!/bin/bash
    set -e
    kubectl completion bash > /etc/bash_completion.d/kubectl
    user=ubuntu
    home=/home/$user
    kube=$home/.kube
    mkdir -p $kube
    cp /etc/kubernetes/admin.conf $kube/config
    chown -R $user:$user $kube
    cat <<EOF >> $home/.bashrc
    alias k=kubectl
    complete -F __start_kubectl k
    EOF

# https://docs.cilium.io/en/stable/installation/k8s-install-kubeadm/
- path: /usr/local/bin/kubernetes-setup-cni.sh
  permissions: '0755'
  content: |
    #!/bin/bash
    set -e
    snap install helm --classic
    helm repo add cilium https://helm.cilium.io/
    helm repo update
    export KUBECONFIG=/etc/kubernetes/admin.conf
    ipaddr=$(ifconfig | grep 'inet[^6]' | awk '{print $2}' | grep -v '127.0.0.1')
    helm install cilium cilium/cilium -n kube-system \
      --set kubeProxyReplacement=true \
      --set k8sServiceHost=${ipaddr} \
      --set k8sServicePort=6443 \
      --set operator.replicas=1 \
      --set hubble.relay.enabled=true \
      --set hubble.ui.enabled=true \
      --wait

- path: /usr/local/bin/kubernetes-setup-single-master.sh
  permissions: '0755'
  content: |
    #!/bin/bash
    set -e
    ipaddr=$(ifconfig | grep 'inet[^6]' | awk '{print $2}' | grep -v '127.0.0.1')
    kubeadm init --apiserver-advertise-address=${ipaddr} --pod-network-cidr=10.244.0.0/16 --skip-phases=addon/kube-proxy
    kubeadm token create --print-join-command > /tmp/setup_worker.sh
    /usr/local/bin/kubernetes-setup-cni.sh
    /usr/local/bin/kubernetes-setup-kubectl.sh

- path: /usr/local/bin/kubernetes-setup-primary-master.sh
  permissions: '0755'
  content: |
    #!/bin/bash
    set -e
    proxy_fqdn=${1-k8smain.local}
    ipaddr=$(ifconfig | grep 'inet[^6]' | awk '{print $2}' | grep -v '127.0.0.1')
    kubeadm init --apiserver-advertise-address=${ipaddr} --pod-network-cidr=10.244.0.0/16 --skip-phases=addon/kube-proxy \
      --control-plane-endpoint=${proxy_fqdn}:6443 --upload-certs
    cert_key=$(sudo kubeadm init phase upload-certs --upload-certs | tail -n 1)
    kubeadm token create --print-join-command --certificate-key $cert_key > /tmp/setup_secondary_master.sh
    kubeadm token create --print-join-command > /tmp/setup_worker.sh
    /usr/local/bin/kubernetes-setup-cni.sh
    /usr/local/bin/kubernetes-setup-kubectl.sh

- path: /usr/local/bin/kubernetes-setup-secondary-master.sh
  permissions: '0755'
  content: |
    #!/bin/bash
    set -e
    if ! [ -f "/tmp/setup_secondary_master.sh" ]; then
      echo "Cannot find join script..."
      exit
    fi
    ipaddr=$(ifconfig | grep 'inet[^6]' | awk '{print $2}' | grep -v '127.0.0.1')
    $(cat /tmp/setup_secondary_master.sh) --apiserver-advertise-address=${ipaddr}

packages:
- net-tools
- apt-transport-https
- ca-certificates
- curl
- software-properties-common
- gnupg2
- containerd

runcmd:
- systemctl restart systemd-sysctl
- systemctl restart systemd-resolved.service
- systemctl start mdns@ens3.service
- systemctl enable mdns@ens3.service
- timedatectl set-timezone America/New_York
- timedatectl set-ntp on
- systemctl stop apparmor
- systemctl disable apparmor
- modprobe overlay
- modprobe br_netfilter
- swapoff -a
- sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab
- mkdir -p /etc/containerd
- containerd config default | sed '/SystemdCgroup/s/false/true/' > /etc/containerd/config.toml
- systemctl restart containerd
- kubernetes-install.sh
