#cloud-config
package_upgrade: true
manage_etc_hosts: false

write_files:

- owner: root:root
  path: /etc/modules-load.d/containerd.conf
  permissions: '0644'
  content: |
    br_netfilter

- owner: root:root
  path: /etc/sysctl.d/99-kubernetes-cri.conf
  permissions: '0644'
  content: |
    net.bridge.bridge-nf-call-iptables  = 1
    net.bridge.bridge-nf-call-ip6tables = 1
    net.ipv4.ip_forward                 = 1

- owner: root:root
  path: /usr/local/bin/kubernetes-setup-kubectl.sh
  permissions: '0755'
  content: |
    #!/bin/bash
    kubectl completion bash > /etc/bash_completion.d/kubectl
    user=ubuntu
    home=/home/$user
    kube=$home/.kube
    mkdir -p $kube
    cp /etc/kubernetes/admin.conf $kube/config
    chown -R $user:$user $kube
    cat <<EOF >> $home/.bashrc
    alias k=kubectl
    complete -F __start_kubectl k
    EOF

- owner: root:root
  path: /usr/local/bin/kubernetes-setup-cni.sh
  permissions: '0755'
  content: |
    #!/bin/bash
    export KUBECONFIG=/etc/kubernetes/admin.conf
    kubectl apply -f "https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d '\n')"

- owner: root:root
  path: /usr/local/bin/kubernetes-setup-single-master.sh
  permissions: '0755'
  content: |
    #!/bin/bash
    ipaddr=$(ifconfig enp0s2 | grep 'inet[^6]' | awk '{print $2}')
    kubeadm init --apiserver-advertise-address=$ipaddr --pod-network-cidr=10.32.0.0/16
    kubeadm token create --print-join-command > /tmp/setup_worker.sh
    /usr/local/bin/kubernetes-setup-cni.sh
    /usr/local/bin/kubernetes-setup-kubectl.sh

- owner: root:root
  path: /usr/local/bin/kubernetes-setup-primary-master.sh
  permissions: '0755'
  content: |
    #!/bin/bash
    proxy_fqdn=${1-k8smain}
    ipaddr=$(ifconfig enp0s2 | grep 'inet[^6]' | awk '{print $2}')
    kubeadm init --apiserver-advertise-address=$ipaddr --pod-network-cidr=10.32.0.0/16 --control-plane-endpoint "$proxy_fqdn:6443" --upload-certs
    cert_key=$(sudo kubeadm init phase upload-certs --upload-certs | tail -n 1)
    kubeadm token create --print-join-command --certificate-key $cert_key > /tmp/setup_secondary_master.sh
    kubeadm token create --print-join-command > /tmp/setup_worker.sh
    /usr/local/bin/kubernetes-setup-cni.sh
    /usr/local/bin/kubernetes-setup-kubectl.sh

- owner: root:root
  path: /usr/local/bin/kubernetes-setup-secondary-master.sh
  permissions: '0755'
  content: |
    #!/bin/bash
    if [ -f "/tmp/setup_secondary_master.sh" ]; then
      echo "Cannot find join script..."
      exit
    fi
    ipaddr=$(ifconfig enp0s2 | grep 'inet[^6]' | awk '{print $2}')
    $(cat /tmp/setup_secondary_master.sh) --apiserver-advertise-address=$ipaddr

- owner: root:root
  path: /usr/local/bin/kubernetes-setup-kubectl.sh
  permissions: '0755'
  content: |
    #!/bin/bash
    kubectl completion bash > /etc/bash_completion.d/kubectl
    user=ubuntu
    home=/home/$user
    kube=$home/.kube
    mkdir -p $kube
    cp /etc/kubernetes/admin.conf $kube/config
    chown -R $user:$user $kube
    cat <<EOF >> $home/.bashrc
    alias k=kubectl
    complete -F __start_kubectl k
    EOF

bootcmd:
- curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -

apt:
  preserve_sources_list: true
  sources:
    kubernetes:
      source: deb https://apt.kubernetes.io/ kubernetes-xenial main

packages:
- net-tools
- apt-transport-https
- ca-certificates
- curl
- software-properties-common
- gnupg2
- containerd
- [kubelet, 1.21.3-00]
- [kubeadm, 1.21.3-00]
- [kubectl, 1.21.3-00]

runcmd:
- timedatectl set-timezone America/New_York
- timedatectl set-ntp on
- systemctl stop apparmor
- systemctl disable apparmor
- modprobe br_netfilter
- sysctl --system
- swapoff -a
- sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab
- mkdir -p /etc/containerd
- containerd config default > /etc/containerd/config.toml
- systemctl restart containerd
- apt-mark hold kubelet kubeadm kubectl
